// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// runNoisewalker
void runNoisewalker(const int genmax, const int timesteps, const int nOctaves, const double frequency, const double newSrange, const std::string rep);
RcppExport SEXP _noisewalker_runNoisewalker(SEXP genmaxSEXP, SEXP timestepsSEXP, SEXP nOctavesSEXP, SEXP frequencySEXP, SEXP newSrangeSEXP, SEXP repSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const int >::type genmax(genmaxSEXP);
    Rcpp::traits::input_parameter< const int >::type timesteps(timestepsSEXP);
    Rcpp::traits::input_parameter< const int >::type nOctaves(nOctavesSEXP);
    Rcpp::traits::input_parameter< const double >::type frequency(frequencySEXP);
    Rcpp::traits::input_parameter< const double >::type newSrange(newSrangeSEXP);
    Rcpp::traits::input_parameter< const std::string >::type rep(repSEXP);
    runNoisewalker(genmax, timesteps, nOctaves, frequency, newSrange, rep);
    return R_NilValue;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_noisewalker_runNoisewalker", (DL_FUNC) &_noisewalker_runNoisewalker, 6},
    {NULL, NULL, 0}
};

RcppExport void R_init_noisewalker(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
